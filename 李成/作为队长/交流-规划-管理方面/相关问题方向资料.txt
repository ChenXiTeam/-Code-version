文本分析是指对文本的表示及其特征项的选取  它把从文本中抽取出的特征词进行量化来表示文本信息。

OCR（Optical Character Recognition，光学字符识别）
搜狗 OCR 接口：这个接口识别效果很好，速度、准确率都没的说！但其对图片的尺寸有规定，
百度 OCR 接口：其识别的精确度还可以，但是标点符号识别不太准确，速度一般。   
腾讯 OCR 接口：也是比较准确的，但速度比较慢。
有道 OCR 接口：速度很快，平均 0.3-0.4 秒就可识别出来，但是接口有 IP 请求的限制。

Apache Tika
Apache Tika 利用现有的解析类库，从不同格式的文档中（例如HTML, PDF, Doc)，侦测和提取出元数据和结构化内容。

lintPC-Lint
C/C++
是一种静态代码检测工具，是一种更加严格的编译器,不仅可以检查出一般的语法错误,还可以检查出虽然完全符合要求，但是却可能存在潜在的,不易发现的错误

Sonar是一个用于代码质量管理的开源平台，用于管理源代码的质量 通过插件形式，可以支持包括java,C#,C/C++,PL/SQL,Cobol,JavaScrip,Groovy等等二十几种编程语言的代码质量管理与检测 
Sonar可以从以下七个维度检测代码质量，而作为开发人员至少需要处理前5种代码质量问题 
1. 不遵循代码标准 sonar可以通过PMD,CheckStyle,Findbugs等等代码规则检测工具规范代码编写 
2. 潜在的缺陷 sonar可以通过PMD,CheckStyle,Findbugs等等代码规则检测工具检测出潜在的缺陷
3. 糟糕的复杂度分布 文件、类、方法等，如果复杂度过高将难以改变，这会使得开发人员难以理解它们 且如果没有自动化的单元测试，对于程序中的任何组件的改变都将可能导致需要全面的回归测试 
4. 重复 显然程序中包含大量复制粘贴的代码是质量低下的，sonar可以展示源码中重复严重的地方 
5. 注释不足或者过多 没有注释将使代码可读性变差，特别是当不可避免地出现人员变动时，程序的可读性将大幅下降 而过多的注释又会使得开发人员将精力过多地花费在阅读注释上，亦违背初衷 
6. 缺乏单元测试 sonar可以很方便地统计并展示单元测试覆盖率 
7. 糟糕的设计  通过sonar可以找出循环，展示包与包、类与类之间相互依赖关系，可以检测自定义的架构规则 通过sonar可以管理第三方的jar包，可以利用LCOM4检测单个任务规则的应用情况， 检测耦合


TF-IDF
TF-IDF（term frequency–inverse document frequency）是一种用于信息检索与数据挖掘的常用加权技术。
TF是词频(Term Frequency)，IDF是逆文本频率指数(Inverse Document Frequency)。

sonarqube-api

文本相似度分析
https://blog.csdn.net/weixin_42898819/article/details/81532513
如何计算两份代码的相似度
https://www.zhihu.com/question/21117858/answer/18166819
